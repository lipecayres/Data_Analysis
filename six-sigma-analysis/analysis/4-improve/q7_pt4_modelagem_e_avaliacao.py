# -*- coding: utf-8 -*-
"""Q7_pt4_Modelagem_e_avaliacao.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1An3miODZ41oIbRT9ch-ooDOIak2hj-r7

#**Modelagem**
"""

# Importar arquivo "Dados_para_modelo"
from google.colab import files
uploaded = files.upload()

"""**Bibliotecas utilizadas**"""

import numpy as np
import pandas as pd

from keras.models import Sequential
from keras.layers import Dense, Dropout
from sklearn.metrics import confusion_matrix
from sklearn.metrics import accuracy_score

"""**Importando dados**"""

import pickle
# Lendo o modelo
X_treinamento, y_treinamento, X_teste, y_teste = pickle.load(open('Dados_para_modelo.sav', 'rb'))

"""**Modelagem**"""

modelo = Sequential()
modelo.add(Dense(units = 1000, activation = 'relu', input_dim = 4))
modelo.add(Dropout(0.2))
modelo.add(Dense(units = 500, activation = 'relu'))
modelo.add(Dropout(0.2))

modelo.add(Dense(units = 3, activation = 'softmax'))

modelo.compile(optimizer = 'adam', loss = 'categorical_crossentropy', metrics = ['accuracy'])
historico = modelo.fit(X_treinamento, y_treinamento, epochs = 20, validation_data = (X_teste, y_teste))

"""**Avaliação do modelo**"""

# Base de treinamento

previsoes = modelo.predict(X_treinamento)

y_teste_matriz = [np.argmax(t) for t in y_treinamento]
y_previsoes_matriz = [np.argmax(t) for t in previsoes]

confusao = confusion_matrix(y_teste_matriz, y_previsoes_matriz)

ACC = accuracy_score(y_teste_matriz, y_previsoes_matriz)

print('Acurácia para a base de treinamento: {:.4f}'.format(ACC))

# Base de teste

previsoes = modelo.predict(X_teste)

y_teste_matriz = [np.argmax(t) for t in y_teste]
y_previsoes_matriz = [np.argmax(t) for t in previsoes]

confusao = confusion_matrix(y_teste_matriz, y_previsoes_matriz)

ACC = accuracy_score(y_teste_matriz, y_previsoes_matriz)

print('Acurácia para a base de teste: {:.4f}'.format(ACC))

